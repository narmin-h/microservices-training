spring:
  cloud:
    gateway:
      routes:
        - id: customer-profile-management
          uri: http://localhost:8080
          predicates:
            - Path=/api/profiles/**
          filters:
            - StripPrefix=1
            - name: Custom
              args:
                headerName: X-checksum
                headerValue: 1234
                enabled: true
            - name: CircuitBreaker
              args:
                name: defaultCircuitBreaker
                fallbackUri: forward:/fallback

            - name: Retry
              args:
                retries: 3
                #exceptions: java.util.concurrent.TimeoutException
                methods: GET
                backoff:
                  firstBackoff: 5msdoc
                  maxBackoff: 700ms
                  factor: 2
                  basedOnPreviousValue: true

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 5
                redis-rate-limiter.requestTokens: 1
                key-resolver: "#{@ipKeyResolver}"
  data:
    redis:
      port: 6379
      host: localhost

#      default-filters:
#        - name: CircuitBreaker
#          args:
#            name: defaultCircuitBreaker
#            fallbackUri: forward:/fallback


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: read_only


resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        permitted-number-of-calls-in-half-open-state: 2
        wait-duration-in-open-state: 3000




